---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sparkyfitness
  namespace: sparkyfitness
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 15.2.3
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      stopAll: false
    image:
      repository: codewithcj/sparkyfitness_server
      pullPolicy: IfNotPresent
      tag: v0.13@sha256:ca9b77d034b0b9d6f137d943e2445d8eb3b4833731fe3c8cb1f3480b5faf9d4d
    uiImage:
      repository: codewithcj/sparkyfitness
      pullPolicy: IfNotPresent
      tag: v0.13@sha256:bbc3deb8e625b14ef3494ab7a7106a00291934b31ba9cb7de77e45e739ea0c05
    credentials:
      cf-restic:
        type: s3
        url: "${CF_S3_RESTIC_URL}"
        bucket: "${CF_S3_RESTIC_BUCKET}-sparkyfitness"
        accessKey: "${CF_S3_RESTIC_ID}"
        secretKey: "${CF_S3_RESTIC_KEY}"
        encrKey: "${CF_S3_RESTIC_KEY}"
    securityContext:
      container:
        runAsNonRoot: false
        readOnlyRootFilesystem: false
        runAsUser: 0
        runAsGroup: 0
    service:
      main:
        enabled: true
        targetSelector: ui
        ports:
          main:
            protocol: http
            port: 80
            targetSelector: ui
      api:
        enabled: true
        targetSelector: main
        ports:
          api:
            enabled: true
            protocol: http
            port: 3010
            targetSelector: main
    
    workload:
      main:
        podSpec:
          containers:
            main:
              imageSelector: image
              probes:
                liveness:
                  enabled: true
                  type: http
                  path: /
                  port: "{{ .Values.service.api.ports.api.port }}"
                readiness:
                  enabled: true
                  type: http
                  path: /
                  port: "{{ .Values.service.api.ports.api.port }}"
                startup:
                  enabled: true
                  type: tcp
                  port: "{{ .Values.service.api.ports.api.port }}"
              env:                
                SPARKY_FITNESS_SERVER_PORT: "{{ .Values.service.api.ports.api.port }}"
                SPARKY_FITNESS_SERVER_HOST: localhost
                SPARKY_FITNESS_LOG_LEVEL: INFO
                SPARKY_FITNESS_DB_USER: "{{ .Values.cnpg.main.user }}"
                SPARKY_FITNESS_DB_HOST:
                  secretKeyRef:
                    name: cnpg-main-urls
                    key: host
                SPARKY_FITNESS_DB_NAME: "{{ .Values.cnpg.main.database }}"
                SPARKY_FITNESS_DB_PASSWORD:
                  secretKeyRef:
                    name: cnpg-main-user
                    key: password
                SPARKY_FITNESS_DB_PORT: 5432
                SPARKY_FITNESS_API_ENCRYPTION_KEY: ${SPARKY_FITNESS_API_ENCRYPTION_KEY}
                JWT_SECRET: ${SPARKY_FITNESS_JWT_SECRET}
                SPARKY_FITNESS_FRONTEND_URL: "https://sparkyfitness.${DOMAIN_2}"
                SPARKY_FITNESS_DISABLE_SIGNUP: false
                SPARKY_FITNESS_ADMIN_EMAIL: ${SPARKY_FITNESS_ADMIN_EMAIL}  #User with this email can access the admin panel         
      ui:
        enabled: true
        type: Deployment
        podSpec:
          containers:
            ui:
              primary: true
              enabled: true
              imageSelector: uiImage
              resources:
                excludeExtra: true
              probes:
                liveness:
                  enabled: true
                  type: http
                  path: /
                  port: "{{ .Values.service.main.ports.main.port }}"
                readiness:
                  enabled: true
                  type: http
                  path: /
                  port: "{{ .Values.service.main.ports.main.port }}"
                startup:
                  enabled: true
                  type: tcp
                  port: "{{ .Values.service.main.ports.main.port }}"
              env:                
                SPARKY_FITNESS_SERVER_PORT: "{{ .Values.service.api.ports.api.port }}"
                SPARKY_FITNESS_SERVER_HOST: '{{ printf "%s" (include "tc.v1.common.lib.chart.names.fullname" $) }}'
    ingress:
      main:
        enabled: true
        ingressClassName: "external"
        hosts:
          - host: sparkyfitness.${DOMAIN_2}
            paths:
              - path: /
                pathType: Prefix
        integrations:
          nginx:
            enabled: true
          certManager:
            enabled: true
            certificateIssuer: general-le-prod
      
    cnpg:
      main:
        enabled: true
        user: sparkyfitness
        database: sparkyfitness
        # mode: recovery
        cluster:
          singleNode: true
        backups:
          enabled: false
          credentials: cf-restic
          scheduledBackups:
            - name: daily-backup
              schedule: "0 5 0 * * *"
              backupOwnerReference: self
              immediate: true
              suspend: false
        recovery:
          method: object_store
          credentials: cf-restic
