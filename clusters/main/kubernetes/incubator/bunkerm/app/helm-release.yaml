---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: bunkerm
  namespace: bunkerm
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 15.2.8
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:    
    global:
      stopAll: true
    securityContext:
      container:
        runAsNonRoot: false
        readOnlyRootFilesystem: false
        runAsUser: 0
        runAsGroup: 0
    image:
      repository: bunkeriot/bunkerm
      pullPolicy: IfNotPresent
      tag: v1.2.0@sha256:2da550ba93e5ab1dff2b0569f92471c752783a02d80b57b26cb86d890917d7e5
    credentials:
      cf-restic:
        type: s3
        url: "${CF_S3_RESTIC_URL}"
        bucket: "${CF_S3_RESTIC_BUCKET}-bunkerm"
        accessKey: "${CF_S3_RESTIC_ID}"
        secretKey: "${CF_S3_RESTIC_KEY}"
        encrKey: "${CF_S3_RESTIC_KEY}"
    service:
      main:
        enabled: true
        type: ClusterIP
        ports:
          main:
            port: 2000
      mqtt:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: ${BUNKERM_IP}
        ports:
          mqtt:
            enabled: true
            port: 1900
      auth:
        enabled: true
        ports:
          auth:
            enabled: true
            port: 3001

    bunkerm:
      allowed:
        origins:
          - https://localhost:2000
          - https://bunkerm.${DOMAIN_2}
          - "*"
        hosts:
          - '{{ printf "%s" (include "tc.v1.common.lib.chart.names.fullname" $) }}'
          - localhost
          - 127.0.0.1
          - https://bunkerm.${DOMAIN_2}
          - "*"

    workload:
      main:
        podSpec:
          containers:
            main:
              env:
                # MQTT Settings
                MQTT_BROKER: '{{ printf "%s" (include "tc.v1.common.lib.chart.names.fullname" $) }}' # localhost
                MQTT_PORT: "{{ .Values.service.mqtt.ports.mqtt.port }}"
                # MQTT_USERNAME: bunker
                # MQTT_PASSWORD: bunker
                # Security Settings
                JWT_SECRET: ${BUNKERM_JWT}
                # API_KEY: "${BUNKERM_API}"
                # VITE_API_KEY: "${BUNKERM_VITE}"
                FRONTEND_URL: https://bunkerm.${DOMAIN_2}
                ALLOWED_ORIGINS: '{{ join "," .Values.bunkerm.allowed.origins }}'
                ALLOWED_HOSTS: '{{ join "," .Values.bunkerm.allowed.hosts }}'
                # Rate Limiting
                RATE_LIMIT_PER_MINUTE: 100
                # SSL Configuration
                # SSL_CERT_PATH=/app/certs/cert.pem
                # SSL_KEY_PATH=/app/certs/key.pem
                # Logging
                LOG_LEVEL: INFO
                # API_LOG_FILE=/var/log/api/api_activity.log
                # VITE_AWS_BRIDGE_API_URL: https://bunkerm.${DOMAIN_2}/api/aws-bridge
                # DYNSEC_PATH=/var/lib/mosquitto/dynamic-security.json
                MAX_UPLOAD_SIZE: 10485760
                # Auth API Settings
                AUTH_API_PORT: "{{ .Values.service.auth.ports.auth.port }}"
                # DB_PATH: "/data"
    ingress:
      main:
        enabled: true
        ingressClassName: "internal"
        hosts:
          - host: bunkerm.${DOMAIN_2}
            paths:
              - path: /
                pathType: Prefix
        integrations:
          nginx:
            enabled: true
            auth:
              type: "authelia"
              internalHost: "authelia.authelia.svc.cluster.local:9091"
              externalHost: "auth.${DOMAIN_2}"
          certManager:
            enabled: true
            certificateIssuer: general-le-prod
    persistence:
      config:
        enabled: true
        mountPath: /etc/mosquitto
        volsync:
          - name: config
            type: restic
            credentials: cf-restic
            dest:
              enabled: true
            src:
              enabled: true
      mqtt-data:
        enabled: true
        mountPath: /var/lib/mosquitto
        volsync:
          - name: mqtt-data
            type: restic
            credentials: cf-restic
            dest:
              enabled: true
            src:
              enabled: true
      auth-data:
        enabled: true
        mountPath: /data
        volsync:
          - name: auth-data
            type: restic
            credentials: cf-restic
            dest:
              enabled: true
            src:
              enabled: true
    cnpg:
      main:
        enabled: false
