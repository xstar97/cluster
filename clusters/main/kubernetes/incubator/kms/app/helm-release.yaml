---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kms
  namespace: kms
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 15.1.1
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:    
    global:
      stopAll: false
    securityContext:
      readOnlyRootFilesystem: false
    image:
      repository: ghcr.io/11notes/kms-gui
      pullPolicy: IfNotPresent
      tag: 1.0.2@sha256:89fac940c8b6c1491fda48dcdf109aac8d75aeb03ee4ef9c0131a85f1e5beb95
    backendImage:
      repository: ghcr.io/11notes/kms
      pullPolicy: IfNotPresent
      tag: 1.0.2@sha256:be185bec3416ff358c49d6325f45af7ae1c2a1b81ad61f2bbba9c7efb6ede013
    credentials:
      cf-restic:
        type: s3
        url: "${CF_S3_RESTIC_URL}"
        bucket: "${CF_S3_RESTIC_BUCKET}-kms"
        accessKey: "${CF_S3_RESTIC_ID}"
        secretKey: "${CF_S3_RESTIC_KEY}"
        encrKey: "${CF_S3_RESTIC_KEY}"
    service:
      main:
        enabled: true
        type: ClusterIP
        ports:
          main:
            port: 3000
      backend:
        enabled: true
        type: ClusterIP
        ports:
          backend:
            enabled: true
            port: 1688
    workload:
      main:
        podSpec:
          containers:
            main:
              env: {}
            backend:
              enabled: true
              imageSelector: backendImage
              probes:
                liveness:
                  enabled: true
                  type: http
                  port: "{{ .Values.service.backend.ports.backend.port }}"
                readiness:
                  enabled: true
                  type: http
                  port: "{{ .Values.service.backend.ports.backend.port }}"
                startup:
                  enabled: true
                  type: tcp
                  port: "{{ .Values.service.backend.ports.backend.port }}"
              env:
                # DEBUG: ""
                KMS_LOCALE: en-US
                KMS_ACTIVATIONINTERVAL: 120
                KMS_RENEWALINTERVAL: 259200
    
    ingress:
      main:
        enabled: true
        ingressClassName: "internal"
        hosts:
          - host: kms.${DOMAIN_2}
            paths:
              - path: /
                pathType: Prefix
        integrations:
          nginx:
            enabled: true
            auth:
              type: "authelia"
              internalHost: "authelia.authelia.svc.cluster.local:9091"
              externalHost: "auth.${DOMAIN_2}"
          certManager:
            enabled: true
            certificateIssuer: general-le-prod
    persistence:
      config:
        enabled: true
        targetSelector:
          main:
            main:
              mountPath: /kms/var
            backend:
              mountPath: /kms/var
        volsync:
          - name: config
            type: restic
            credentials: cf-restic
            dest:
              cacheCapacity: 10Gi
              enabled: false
            src:
              enabled: false
              cacheCapacity: 10Gi
    cnpg:
      main:
        enabled: false
