---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: karakeep
  namespace: karakeep
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 14.5.3
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      stopAll: false
    image:
      repository: ghcr.io/karakeep-app/karakeep
      pullPolicy: IfNotPresent
      tag: 0.23.2@sha256:04956fc529d4675cfa849313f270ae863094d1f2be4c922172f06a62ef9bd4ac
    chromeImage:
      repository: ghcr.io/zenika/alpine-chrome:124
      pullPolicy: IfNotPresent
      tag: 124@sha256:1a0046448e0bb6c275c88f86e01faf0de62b02ec8572901256ada0a8c08be23f
    meiliImage:
      repository: getmeili/meilisearch
      pullPolicy: IfNotPresent
      tag: v1.11.3@sha256:6f8f1fc29d1ff67b4d8d503bb4e0a69b55c8d42600decafde951344218193a27
    credentials:
      cf-restic:
        type: s3
        url: "${CF_S3_RESTIC_URL}"
        bucket: "${CF_S3_RESTIC_BUCKET}-karakeep"
        accessKey: "${CF_S3_RESTIC_ID}"
        secretKey: "${CF_S3_RESTIC_KEY}"
        encrKey: "${CF_S3_RESTIC_KEY}"
    securityContext:
      container:
        runAsNonRoot: false
        readOnlyRootFilesystem: false
        runAsUser: 0
        runAsGroup: 0
    service:
      main:
        ports:
          main:
            port: 3000
      chrome:
        enabled: true
        type: ClusterIP
        ports:
          chrome:
            enabled: true
            port: 9222
      meili:
        enabled: true
        type: ClusterIP
        ports:
          meili:
            enabled: true
            port: 7700
    workload:
      main:
        podSpec:
          containers:
            main:
              env:
                DATA_DIR: "{{.Values.persistence.data.mountPath }}"
                MEILI_ADDR: '{{ printf "http://%v-meili:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.meili.ports.meili.port }}'
                BROWSER_WEB_URL: '{{ printf "http://%v-chrome:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.chrome.ports.chrome.port }}'
                MEILI_MASTER_KEY: ${KARAKEEP_MEILI_MASTER_KEY}
                NEXTAUTH_URL: "https://karakeep.${DOMAIN_2}" # '{{ printf "http://%v:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.main.ports.main.port }}'
                NEXTAUTH_SECRET: ${KARAKEEP_NEXTAUTH_SECRET}
      chrome:
        enabled: true
        type: Deployment
        podSpec:
          containers:
            chrome:
              primary: true
              enabled: true
              imageSelector: chromeImage
              resources:
                excludeExtra: true
              probes:
                liveness:
                  enabled: true
                  type: http
                  path: /
                  port: "{{ .Values.service.chrome.ports.chrome.port }}"
                readiness:
                  enabled: true
                  type: http
                  path: /
                  port: "{{ .Values.service.chrome.ports.chrome.port }}"
                startup:
                  enabled: true
                  type: tcp
                  port: "{{ .Values.service.chrome.ports.chrome.port }}"
              args:
                - --no-sandbox
                - --disable-gpu
                - --disable-dev-shm-usage
                - --remote-debugging-address=0.0.0.0
                - --remote-debugging-port="{{ .Values.service.chrome.ports.chrome.port }}"
                - --hide-scrollbars
      meili:
        enabled: true
        type: Deployment
        podSpec:
          containers:
            meili:
              primary: true
              enabled: true
              imageSelector: meiliImage
              resources:
                excludeExtra: true
              probes:
                liveness:
                  enabled: true
                  type: http
                  path: /health
                  port: "{{ .Values.service.meili.ports.meili.port }}"
                readiness:
                  enabled: true
                  type: http
                  path: /health
                  port: "{{ .Values.service.meili.ports.meili.port }}"
                startup:
                  enabled: true
                  type: tcp
                  port: "{{ .Values.service.meili.ports.meili.port }}"
              env:
                MEILI_NO_ANALYTICS: true
                MEILI_MASTER_KEY: "${KARAKEEP_MEILI_MASTER_KEY}"

    ingress:
      main:
        enabled: true
        ingressClassName: "" # "internal"
        hosts:
          - host: karakeep.${DOMAIN_2}
            paths:
              - path: /
                pathType: Prefix
        integrations:
          traefik:
            enabled: true
          certManager:
            enabled: true
            certificateIssuer: general-le-prod
    persistence:
      data:
        enabled: true
        mountPath: /data
        volsync:
          - name: config
            type: restic
            credentials: cf-restic
            dest:
              cacheCapacity: 10Gi
              enabled: false
            src:
              enabled: false
              cacheCapacity: 10Gi
      meili_data:
        enabled: true
        targetSelector:
          meili:
            meili:
              mountPath: /meili_data
              readOnly: true
        volsync:
          - name: meili_data
            type: restic
            credentials: cf-restic
            dest:
              cacheCapacity: 10Gi
              enabled: false
            src:
              enabled: false
              cacheCapacity: 10Gi
    cnpg:
      main:
        enabled: false
