---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: omada-controller
  namespace: omada-controller
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 15.1.2
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      stopAll: false
    resources:
      limits:
        cpu: 4000m
        memory: 4000Mi
    credentials:
      cf-restic:
        type: s3
        url: "${CF_S3_RESTIC_URL}"
        bucket: "${CF_S3_RESTIC_BUCKET}-omada-controller"
        accessKey: "${CF_S3_RESTIC_ID}"
        secretKey: "${CF_S3_RESTIC_KEY}"
        encrKey: "${CF_S3_RESTIC_KEY}"
    image:
      repository: docker.io/mbentley/omada-controller
      tag: 5.15@sha256:40a970c65c3d74069c15eb07ec209fae5dec0be6b1ca698fbadfabdcce6a26da
      pullPolicy: IfNotPresent
    service:
      main:
        ports:
          main:
            protocol: https
            port: 8043
          comm:
            protocol: https
            enabled: true
            port: 8843
      omada:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: "${OMADA_IP}"
        ports:
          manager-v1:
            enabled: true
            protocol: tcp
            port: 29811
          adopt-v1:
            enabled: true
            protocol: tcp
            port: 29812
          upgrade-v1:
            enabled: true
            protocol: tcp
            port: 29813
          manager-v2:
            enabled: true
            protocol: tcp
            port: 29814
          transfer-v2:
            enabled: true
            protocol: tcp
            port: 29815
          rtty:
            enabled: true
            protocol: tcp
            port: 29816
          discovery:
            enabled: true
            protocol: udp
            port: 29810
          app-discovery:
            enabled: true
            protocol: udp
            port: 27001
          management:
            enabled: true
            protocol: udp
            port: 19810
    ingress:
      main:
        enabled: true
        ingressClassName: "internal"
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        hosts:
          - host: omada.controller.${DOMAIN_2}
            paths:
              - path: /
                pathType: Prefix
        integrations:
          nginx:
            enabled: true
          homepage:
            enabled: true
            group: "Networking"
            widget:
              custom:
                type: omada
                username: "${OMADA_USER}"
                password: '${OMADA_PASS}'
                site: '${OMADA_SITE}'
          certManager:
            enabled: true
            certificateIssuer: general-le-prod
    workload:
      main:
        podSpec:
          containers:
            main:
              probes:
                startup:
                  path: /api/info
                  httpHeaders:
                    Host: kube.internal.health
                liveness:
                  path: /api/info
                  httpHeaders:
                    Host: kube.internal.health
                readiness:
                  path: /api/info
                  httpHeaders:
                    Host: kube.internal.health
              env:
                MANAGE_HTTPS_PORT: "{{ .Values.service.main.ports.main.port }}"
                PORTAL_HTTPS_PORT: "{{ .Values.service.main.ports.comm.port }}"
                PORT_ADOPT_V1: "{{ .Values.service.omada.ports.adopt-v1.port }}"
                PORT_APP_DISCOVERY: "{{ .Values.service.omada.ports.app-discovery.port }}"
                PORT_DISCOVERY: "{{ .Values.service.omada.ports.discovery.port }}"
                PORT_MANAGER_V1: "{{ .Values.service.omada.ports.manager-v1.port }}"
                PORT_MANAGER_V2: "{{ .Values.service.omada.ports.manager-v2.port }}"
                PORT_TRANSFER_V2: "{{ .Values.service.omada.ports.transfer-v2.port }}"
                PORT_RTTY: "{{ .Values.service.omada.ports.rtty.port }}"
                PORT_UPGRADE_V1: "{{ .Values.service.omada.ports.upgrade-v1.port }}"
                ROOTLESS: "true"
                PUSERNAME: 568
                PGROUP: 568
    persistence:
      data:
        mountPath: /opt/tplink/EAPController/data
        volsync:
          - name: data
            type: restic
            credentials: cf-restic
            dest:
              cacheCapacity: 10Gi
              enabled: true
            src:
              enabled: true
              cacheCapacity: 10Gi
      work:
        mountPath: /opt/tplink/EAPController/work
        volsync:
          - name: work
            type: restic
            credentials: cf-restic
            dest:
              enabled: true
              cacheCapacity: 10Gi
            src:
              enabled: true
              cacheCapacity: 10Gi
