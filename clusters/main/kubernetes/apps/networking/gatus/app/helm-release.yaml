---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gatus
  namespace: gatus
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 15.2.5
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      stopAll: false
    image:
      repository: ghcr.io/twin/gatus
      pullPolicy: IfNotPresent
      tag: v5.20.0@sha256:e655d13d0cb89c64a2e53a853bbca9556a7238e788bc4a08c19aa5fb7938d0da
    credentials:
      cf-restic:
        type: s3
        url: "${CF_S3_RESTIC_URL}"
        bucket: "${CF_S3_RESTIC_BUCKET}-gatus"
        accessKey: "${CF_S3_RESTIC_ID}"
        secretKey: "${CF_S3_RESTIC_KEY}"
        encrKey: "${CF_S3_RESTIC_KEY}"
    securityContext:
      readOnlyRootFilesystem: false
    service:
      main:
        ports:
          main:
            port: 8080
    ingress:
      main:
        enabled: true
        ingressClassName: "external"
        hosts:
          - host: gatus.${DOMAIN_2}
            paths:
              - path: /
                pathType: Prefix
        integrations:
          nginx:
            enabled: true
          certManager:
            enabled: true
            certificateIssuer: general-le-prod

    gatus:
      endpoints:
        - name: opnsense
          group: network
          url: "https://${NUT_ROUTER_IP}"
          interval: 1m
          client:
            insecure: true
            ignore-redirect: false
            timeout: 10s
          conditions:
            - "[CONNECTED] == true"
        - name: ap-omada-0
          group: network
          url: "http://${AP_OMADA_IP_0}"
          interval: 1m
          conditions:
            - "[CONNECTED] == true"
        - name: nw-0
          group: network
          url: "http://${NW_SWITCH_IP_0}"
          interval: 1m
          conditions:
            - "[CONNECTED] == true"
        - name: nginx-external
          group: core
          url: "https://nginx-external-controller-admission.nginx.svc.cluster.local:443"
          interval: 1m
          client:
            insecure: true
            ignore-redirect: false
            timeout: 10s
          conditions:
            - "[CONNECTED] == true"
        - name: nginx-internal
          group: core
          url: "https://nginx-internal-controller-admission.nginx.svc.cluster.local:443"
          interval: 1m
          client:
            insecure: true
            ignore-redirect: false
            timeout: 10s
          conditions:
            - "[CONNECTED] == true"
        - name: blocky (dns)
          group: core
          url: "http://blocky.blocky.svc.cluster.local:4000"
          interval: 1m
          conditions:
            - "[CONNECTED] == true"

    configmap:
      gatus-config:
        enabled: true
        data:
          config.yaml: |
            {{- if .Values.cnpg.main.enabled }}
            storage:
              type: postgres
              path: {{ (printf "%s?client_encoding=utf8" (.Values.cnpg.main.creds.std | trimAll "\"")) | quote }}
            {{- end }}
            connectivity:
              checker:
                target: 1.1.1.1:53
                interval: 60s
            {{- $.Values.gatus | toYaml | nindent 2 }}

    persistence:
      config:
        enabled: true
        mountPath: /config
        volsync:
          - name: config
            type: restic
            credentials: cf-restic
            dest:
              enabled: false
              cacheCapacity: 10Gi
            src:
              enabled: false
              cacheCapacity: 10Gi
      gatus-config:
        enabled: true
        type: configmap
        mountPath: /config/config.yaml
        objectName: gatus-config
        readOnly: true
        subPath: config.yaml

    cnpg:
      main:
        enabled: true
        user: gatus
        database: gatus
        mode: recovery
        cluster:
          singleNode: true
        backups:
          enabled: true
          credentials: cf-restic
          scheduledBackups:
            - name: daily-backup
              schedule: "0 5 0 * * *"
              backupOwnerReference: self
              immediate: true
              suspend: false
        recovery:
          method: object_store
          credentials: cf-restic
