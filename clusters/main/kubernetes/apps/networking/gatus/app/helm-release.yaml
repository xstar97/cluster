---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gatus
  namespace: gatus
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 15.2.5
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      stopAll: false
    image:
      repository: ghcr.io/twin/gatus
      pullPolicy: IfNotPresent
      tag: v5.20.0@sha256:e655d13d0cb89c64a2e53a853bbca9556a7238e788bc4a08c19aa5fb7938d0da
    sideCarImage:
      repository: ghcr.io/home-operations/k8s-sidecar
      pullPolicy: IfNotPresent
      tag: 1.30.7@sha256:3b6444d91c6e69a9e07c5e55419452d967d18c833d88b36277dc2021b708f621
    credentials:
      cf-restic:
        type: s3
        url: "${CF_S3_RESTIC_URL}"
        bucket: "${CF_S3_RESTIC_BUCKET}-gatus"
        accessKey: "${CF_S3_RESTIC_ID}"
        secretKey: "${CF_S3_RESTIC_KEY}"
        encrKey: "${CF_S3_RESTIC_KEY}"
    securityContext:
      readOnlyRootFilesystem: false
    service:
      main:
        ports:
          main:
            port: 8080
    ingress:
      main:
        enabled: true
        ingressClassName: "external"
        hosts:
          - host: gatus.${DOMAIN_2}
            paths:
              - path: /
                pathType: Prefix
        integrations:
          nginx:
            enabled: true
          certManager:
            enabled: true
            certificateIssuer: general-le-prod
    
    workload:
      main:
        podSpec:
          initContainers:
            init:
              enabled: true
              type: init
              imageSelector: "sideCarImage"
              command:
                - /bin/sh
                - -c
              args:
                - |
                  echo "Checking for config YAML files..."

                  # Count number of .yml and .yaml files in /config
                  YAML_COUNT=$(find /config -maxdepth 1 -type f \( -iname "*.yml" -o -iname "*.yaml" \) | wc -l)

                  if [ "$YAML_COUNT" -gt 0 ]; then
                    echo "Found $YAML_COUNT YAML config file(s). Skipping download..."
                  else
                    echo "No YAML config file found. Exiting after 30 seconds..."
                    sleep 30
                    exit 1
                  fi

              env:
                FOLDER: "{{ .Values.persistence.config.mountPath }}"
                LABEL: gatus.io/enabled
                NAMESPACE: ALL
                RESOURCE: both
                UNIQUE_FILENAMES: true
                METHOD: WATCH
          containers:
            main:
              imageSelector: image
              env:
                GATUS_CONFIG_PATH: "{{ .Values.persistence.config.mountPath }}"
    gatus:
      endpoints:
        - name: opnsense
          group: network
          url: "https://${NUT_ROUTER_IP}"
          interval: 1m
          ui:
            hide-url: true
            hide-hostname: true
          client:
            insecure: true
            ignore-redirect: false
            timeout: 10s
          conditions:
            - "[CONNECTED] == true"
        - name: ap-omada-0
          group: network
          url: "http://${AP_OMADA_IP_0}"
          interval: 1m
          ui:
            hide-url: true
            hide-hostname: true
          conditions:
            - "[CONNECTED] == true"
        - name: nw-0
          group: network
          url: "http://${NW_SWITCH_IP_0}"
          interval: 1m
          ui:
            hide-url: true
            hide-hostname: true
          conditions:
            - "[CONNECTED] == true"
        - name: nginx-external
          group: core
          url: "https://nginx-external-controller-admission.nginx.svc.cluster.local:443"
          interval: 1m
          ui:
            hide-url: true
            hide-hostname: true
          client:
            insecure: true
            ignore-redirect: false
            timeout: 10s
          conditions:
            - "[CONNECTED] == true"
        - name: nginx-internal
          group: core
          url: "https://nginx-internal-controller-admission.nginx.svc.cluster.local:443"
          interval: 1m
          ui:
            hide-url: true
            hide-hostname: true
          client:
            insecure: true
            ignore-redirect: false
            timeout: 10s
          conditions:
            - "[CONNECTED] == true"
        - name: blocky (dns)
          group: core
          url: "http://blocky.blocky.svc.cluster.local:4000"
          interval: 1m
          ui:
            hide-url: true
            hide-hostname: true
          conditions:
            - "[CONNECTED] == true"

    configmap:
      gatus-config:
        enabled: true
        data:
          config.yaml: |
            {{- if .Values.cnpg.main.enabled }}
            storage:
              type: postgres
              path: {{ (printf "%s?client_encoding=utf8" (.Values.cnpg.main.creds.std | trimAll "\"")) | quote }}
            {{- end }}
            {{- $.Values.gatus | toYaml | nindent 2 }}

    persistence:
      config:
        enabled: true
        mountPath: /config
        targetSelectAll: true
        volsync:
          - name: config
            type: restic
            credentials: cf-restic
            dest:
              enabled: false
              cacheCapacity: 10Gi
            src:
              enabled: false
              cacheCapacity: 10Gi
      gatus-config:
        enabled: true
        type: configmap
        mountPath: /config/config.yaml
        objectName: gatus-config
        readOnly: true
        subPath: config.yaml

    cnpg:
      main:
        enabled: true
        user: gatus
        database: gatus
        # mode: recovery
        cluster:
          singleNode: true
        backups:
          enabled: false
          credentials: cf-restic
          scheduledBackups:
            - name: daily-backup
              schedule: "0 5 0 * * *"
              backupOwnerReference: self
              immediate: true
              suspend: false
        recovery:
          method: object_store
          credentials: cf-restic

    addons:
      codeserver:
        enabled: true
        service:
          type: "ClusterIP"
          ports:
            codeserver:
              port: 36107
        ingress:
          enabled: true
          ingressClassName: "internal"
          hosts:
            - host: editor.gatus.${DOMAIN_2}
              paths:
                - path: /
                  pathType: Prefix
          integrations:
            nginx:
              enabled: true
              auth:
                type: "authelia"
                internalHost: "authelia.authelia.svc.cluster.local:9091"
                externalHost: "auth.${DOMAIN_2}"
            certManager:
              enabled: true
              certificateIssuer: general-le-prod

    # -- Whether Role Based Access Control objects like roles and rolebindings should be created
    rbac:
      main:
        enabled: true
        primary: true
        clusterWide: true
        rules:
          - apiGroups: [""]
            resources:
              - "configmaps"
              - "secrets"
            verbs:
              - "get"
              - "list"
              - "watch"
    # -- The service account the pods will use to interact with the Kubernetes API
    serviceAccount:
      main:
        enabled: true
        primary: true

    podOptions:
      automountServiceAccountToken: true
