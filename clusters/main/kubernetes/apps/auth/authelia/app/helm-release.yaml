---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authelia
  namespace: authelia
spec:
  interval: 15m
  chart:
    spec:
      chart: authelia
      version: 29.4.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 5m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      stopAll: false
      skipEmptyWalArchiveCheck: true
    credentials:
      cf-restic:
        type: s3
        url: "${CF_S3_RESTIC_URL}"
        bucket: "${CF_S3_RESTIC_BUCKET}-authelia"
        accessKey: "${CF_S3_RESTIC_ID}"
        secretKey: "${CF_S3_RESTIC_KEY}"
        encrKey: "${CF_S3_RESTIC_KEY}"
    service:
      main:
        type: ClusterIP
        ports:
          main:
            port: 9091
    workload:
      main:
        replicas: 1
        podSpec:
          containers:
            main:
              env:
                AUTHELIA_SESSION_SECRET: ${AUTHELIA_SESSION_KEY}
                AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET: ${AUTHELIA_JWT_KEY}
                AUTHELIA_STORAGE_ENCRYPTION_KEY: ${AUTHELIA_ENCRYPTION_KEY}
                X_AUTHELIA_CONFIG_FILTERS: template
    ingress:
      main:
        enabled: true
        ingressClassName: "external"
        hosts:
          - host: auth.${DOMAIN_2}
            paths:
              - path: /
                pathType: Prefix
        integrations:
          nginx:
            enabled: true
          certManager:
            enabled: true
            certificateIssuer: general-le-prod
    persistence:
      config:
        volsync:
          - name: config
            type: restic
            credentials: cf-restic
            dest:
              enabled: false
            src:
              enabled: false
              trigger:
                schedule: 10 0 * * *
      secrets:
        enabled: true
        type: secret
        objectName: authelia-oidc-secret
        expandObjectName: false
        mountPath: /config/secret
        readOnly: true
    gatus:
      endpoints:
        - name: authelia
          group: auth
          url: "http://authelia.authelia.svc.cluster.local:9091"
          interval: 1m
          ui:
            hide-url: true
            hide-hostname: true
          conditions:
            - "[CONNECTED] == true"
          alerts:
            - type: discord
              description: "healthcheck failed"
              send-on-resolved: true
  
    authelia:      
      server:
        buffers:
          read: 16384
          write: 16384
      theme: dark
      totp:
        issuer: ${DOMAIN_2}
      session:
        cookies:
          - domain: ${DOMAIN_2}
            authelia_url: https://auth.${DOMAIN_2}
      authentication_backend:
        ldap:
          address: ${LLDAP_URL_CLUSTER}
          tls:
            server_name: lldap.${DOMAIN_2}
          base_dn: ${LLDAP_LDAP_BASE_DN}
          attributes:
            username: uid
          additional_users_dn: ou=people
          users_filter: (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
          additional_groups_dn: ou=groups
          groups_filter: (member={dn})
          user: ${LLDAP_LDAP_PWDMANAGER_USER}
          password: ${LLDAP_LDAP_PWDMANAGER_PASS}
      notifier:
        smtp:
          address: 'smtp://${SMTP_GMAIL_HOST}:${SMTP_GMAIL_PORT}'
          username: ${SMTP_GMAIL_EMAIL}
          password: ${SMTP_GMAIL_PASS_AUTHELIA}
          sender: auth@${DOMAIN_2}
          startup_check_address: auth@${DOMAIN_2}
          disable_html_emails: true
          tls:
            server_name: ${SMTP_GMAIL_HOST}
      password_policy:
        standard:
          enabled: true
          min_length: 10
          max_length: 0
          require_uppercase: true
          require_lowercase: true
          require_number: true
          require_special: true
      access_control:
        rules:
          - domain:
              - ${DOMAIN_2}
              - '*.${DOMAIN_2}'
            policy: one_factor
            subject:
              - 'group:lldap_admin'
    configmap:
      gatus:
        enabled: true
        labels:
          gatus.io/enabled: "true"
        data:
          config.yaml: |
            {{- $.Values.gatus | toYaml | nindent 2 }}
    cnpg:
      main:
        # mode: recovery
        cluster:
          singleNode: true
        backups:
          enabled: true
          credentials: cf-restic
          retentionPolicy: "7d"
          scheduledBackups:
            - name: daily-backup
              schedule: "0 5 0 * * *"
              backupOwnerReference: self
              immediate: true
              suspend: false
        recovery:
          method: object_store
          credentials: cf-restic
