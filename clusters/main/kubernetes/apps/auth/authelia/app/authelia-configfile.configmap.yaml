apiVersion: v1
kind: ConfigMap
metadata:
  name: authelia-configfile
  namespace: authelia
data:
  configuration.yaml: |
    session:
      cookies:
        - domain: ${DOMAIN_2}
          authelia_url: https://auth.${DOMAIN_2}
    access_control:
      rules:
        - domain:
            - ${DOMAIN_2}
            - '*.${DOMAIN_2}'
          policy: one_factor
          subject:
            - 'group:lldap_admin'            
    identity_providers:
      oidc:
        claims_policies:
          default:
            id_token: ['rat', 'groups', 'email', 'email_verified', 'alt_emails', 'preferred_username', 'name']
          romm:
            id_token: ['email', 'email_verified', 'alt_emails', 'preferred_username', 'name']            
          grafana:
            id_token: ['email', 'name', 'groups', 'preferred_username']            
          vaultwarden:
            id_token: ['email', 'profile']
        hmac_secret: {{ secret "/config/secret/hmac_secret" }}
        jwks:
          - key: |
              {{ secret "/config/secret/jwks_key.pem" | mindent 10 "|" | msquote }}
        authorization_policies:
          admin:
            default_policy: 'deny'
            rules:
              - policy: 'one_factor'
                subject: 'group:lldap_admin'
          romm:
            default_policy: 'deny'
            rules:
              - policy: 'one_factor'
                subject: 'group:lldap_admin'
              - policy: 'one_factor'
                subject: 'group:lldap_romm'
          grafana:
            default_policy: 'deny'
            rules:
              - policy: 'one_factor'
                subject: 'group:lldap_admin'
              - policy: 'one_factor'
                subject: 'group:lldap_grafana'
          paperless:
            default_policy: 'deny'
            rules:
              - policy: 'one_factor'
                subject: 'group:lldap_admin'
              - policy: 'one_factor'
                subject: 'group:lldap_paperless'
          actual:
            default_policy: 'deny'
            rules:
              - policy: 'one_factor'
                subject: 'group:lldap_admin'
              - policy: 'one_factor'
                subject: 'group:lldap_actual'
          jellyseerr:
            default_policy: 'deny'
            rules:
              - policy: 'one_factor'
                subject: 'group:lldap_admin'
              - policy: 'one_factor'
                subject: 'group:lldap_jellyseerr'
          vaultwarden:
            default_policy: 'deny'
            rules:
              - policy: 'one_factor'
                subject: 'group:lldap_admin'
              - policy: 'one_factor'
                subject: 'group:lldap_vaultwarden'
          wallos:
            default_policy: 'deny'
            rules:
              - policy: 'one_factor'
                subject: 'group:lldap_admin'
              - policy: 'one_factor'
                subject: 'group:lldap_wallos'
        clients:
          - client_id: 'guacamole'
            client_name: 'Apache Guacamole'
            public: true
            authorization_policy: 'admin'
            consent_mode: 'implicit'
            require_pkce: false
            pkce_challenge_method: ''
            redirect_uris:
              - 'https://guacamole.${DOMAIN_2}'
            scopes:
              - 'openid'
              - 'profile'
              - 'groups'
              - 'email'
            response_types:
              - 'id_token'
            grant_types:
              - 'implicit'
            access_token_signed_response_alg: 'none'
            userinfo_signed_response_alg: 'none'
            token_endpoint_auth_method: 'none'
          - client_id: "romm" # read above for how generate
            client_name: "RomM" # will be displayed in Authelia to users
            client_secret:  {{ secret "/config/secret/clients_romm_client_secret" }}
            public: false
            authorization_policy: "romm" # or one_factor, depending on your needs
            grant_types:
                - authorization_code
            redirect_uris:
                - "https://romm.${DOMAIN_2}/api/oauth/openid"
            claims_policy: "romm"
            scopes:
                - "openid"
                - "email"
                - "profile"
            userinfo_signed_response_alg: "none"
            token_endpoint_auth_method: "client_secret_basic"
          - client_id: 'grafana'
            client_name: 'Grafana'
            client_secret: {{ secret "/config/secret/clients_grafana_client_secret" }}
            public: false
            authorization_policy: 'grafana'
            require_pkce: true
            pkce_challenge_method: 'S256'
            redirect_uris:
              - 'https://grafana.${DOMAIN_2}/login/generic_oauth'
            scopes:
              - 'openid'
              - 'profile'
              - 'groups'
              - 'email'
            response_types:
              - 'code'
            grant_types:
              - 'authorization_code'
            access_token_signed_response_alg: 'none'
            userinfo_signed_response_alg: 'none'
            token_endpoint_auth_method: 'client_secret_basic'
            claims_policy: "grafana"
          - client_id: 'paperless'
            client_name: 'Paperless'
            client_secret: {{ secret "/config/secret/clients_paperless_client_secret" }}
            public: false
            authorization_policy: 'paperless'
            require_pkce: true
            pkce_challenge_method: 'S256'
            redirect_uris:
              - 'https://paperless.${DOMAIN_2}/accounts/oidc/authelia/login/callback/'
            scopes:
              - 'openid'
              - 'profile'
              - 'email'
              - 'groups'
            response_types:
              - 'code'
            grant_types:
              - 'authorization_code'
            access_token_signed_response_alg: 'none'
            userinfo_signed_response_alg: 'none'
            token_endpoint_auth_method: 'client_secret_basic'
          - client_id: 'actual-budget'
            client_name: 'Actual Budget'
            client_secret: {{ secret "/config/secret/clients_actual_budget_client_secret" }}
            public: false
            authorization_policy: 'actual'
            require_pkce: false
            pkce_challenge_method: ''
            redirect_uris:
              - 'https://actual.${DOMAIN_2}/openid/callback'
            scopes:
              - 'openid'
              - 'profile'
              - 'groups'
              - 'email'
            response_types:
              - 'code'
            grant_types:
              - 'authorization_code'
            access_token_signed_response_alg: 'none'
            userinfo_signed_response_alg: 'none'
            token_endpoint_auth_method: 'client_secret_basic'
          - client_id: 'jellyseerr'
            client_name: 'Jellyseerr'
            client_secret: {{ secret "/config/secret/clients_jellyseerr_client_secret" }}
            public: false
            authorization_policy: 'jellyseerr'
            redirect_uris:
              - 'https://jellyseerr.${DOMAIN_2}/login/oidc/callback/authelia'
            scopes:
              - 'openid'
              - 'email'
              - 'profile'
              - 'groups'
            token_endpoint_auth_method: 'client_secret_post'
          - client_id: 'vaultwarden'
            client_name: 'vaultwarden'
            client_secret: {{ secret "/config/secret/clients_vaultwarden_client_secret" }}
            public: false
            authorization_policy: 'vaultwarden'
            require_pkce: true
            redirect_uris:
              - 'https://vaultwarden.${DOMAIN_2}/identity/connect/oidc-signin'
            scopes:
              - 'email'
              - 'profile'
              - 'openid'
              - 'offline_access'
            claims_policy: "default"
