---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: twofauth
  namespace: twofauth
spec:
  interval: 15m
  chart:
    spec:
      chart: twofauth
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      stopAll: false
    credentials:
      cloudflare:
        type: s3
        url: "${CF_S3_RESTIC_URL}"
        bucket: "${CF_S3_RESTIC_BUCKET}"
        accessKey: "${CF_S3_RESTIC_ID}"
        secretKey: "${CF_S3_RESTIC_KEY}"
        encrKey: "${CF_S3_RESTIC_KEY}"
    defaultCertificate: domain-0-wildcard
    service:
      main:
        type: ClusterIP
        ports:
          main:
            port: 8000
    twofauth:
      app:
        name: 2FAuth
        site_owner: ${SMTP_GMAIL_HOST}
        session_lifetime: 120
        trusted_proxies:
          - "*"
      mail:
        driver: log
        host: "${SMTP_GMAIL_HOST}"
        port: ${SMTP_GMAIL_PORT}
        from: "${SMTP_GMAIL_HOST}"
        user: "${SMTP_GMAIL_HOST}"
        pass: "${SMTP_GMAIL_PASS_TWOFAUTH}"
        # TLS | STARTTLS | SSL
        encryption: TLS
        from_name: 2FAuth
        from_address: ${SMTP_GMAIL_HOST}
      auth:
        # web-guard | reverse-proxy-guard
        guard: web-guard
        # show if guard uses reverse-proxy-guard
        # proxy_header_for_user: ""
        # proxy_header_for_email: ""
        # proxy_logout_url: ""
      webauthn:
        name: 2FAuth
        id: "2fauth.${DOMAIN_0}"
        icon: ""
        # required | preferred | discouraged
        user_verified: preferred
    workload:
      main:
        podSpec:
          containers:
            main:
              env:
                # APP
                APP_URL: https://2fauth.${DOMAIN_0}:443
    ingress:
      main:
        enabled: true
        integrations:
          traefik:
            enabled: true
            middlewares:
              - name: local
                namespace: traefik
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod
        hosts:
          - host: 2fauth.${DOMAIN_0}
            paths:
              - path: /
                pathType: Prefix
    persistence:
      config:
        volsync:
          - name: data
            type: restic
            credentials: cloudflare
            dest:
              cacheCapacity: 10Gi
              enabled: true
            src:
              enabled: true
              cacheCapacity: 10Gi
      varrun:
        enabled: false
    cnpg:
      main:
        cluster:
          singleNode: true
        backups:
          enabled: true
          credentials: cloudflare
          scheduledBackups:
            - name: daily-backup
              schedule: "0 5 0 * * *"
              backupOwnerReference: self
              immediate: true
              suspend: false
        recovery:
          method: object_store
          credentials: cloudflare
