apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
  namespace: plex
spec:
  interval: 5m
  chart:
    spec:
      chart: plex
      version: 20.4.2
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
  timeout: 20m
  values:
    global:
      stopAll: false
    credentials:
      cf-restic:
        type: s3
        url: "${CF_S3_RESTIC_URL}"
        bucket: "${CF_S3_RESTIC_BUCKET}-plex"
        accessKey: "${CF_S3_RESTIC_ID}"
        secretKey: "${CF_S3_RESTIC_KEY}"
        encrKey: "${CF_S3_RESTIC_KEY}"
      tn-restic:
        type: s3
        url: "${TN_S3_RESTIC_URL}"
        bucket: "${TN_S3_RESTIC_BUCKET}-plex"
        accessKey: "${TN_S3_RESTIC_ID}"
        secretKey: "${TN_S3_RESTIC_KEY}"
        encrKey: "${TN_S3_RESTIC_KEY}"
    plex:
      serverIP: ${PLEX_IP}
      disableGDM: true
      requireHTTPS: false
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${PLEX_IP}
        integrations:
          metallb:
            enabled: true
        ports:
          main:
            port: 32400
    workload:
      main:
        podSpec:
          runtimeClassName: nvidia
          containers:
            main:
              env:
                PLEX_CLAIM: "${PLEX_CLAIM_TOKEN}"
              resources:
                limits:
                  nvidia.com/gpu: 1
    ingress:
      main:
        enabled: true
        ingressClassName: "external"
        hosts:
          - host: plex.${DOMAIN_2}
            paths:
              - path: /
                pathType: Prefix
        integrations:
          nginx:
            enabled: true
            auth:
              type: "authelia"
              internalHost: "authelia.authelia.svc.cluster.local:9091"
              externalHost: "auth.${DOMAIN_2}"
          homepage:
            enabled: true
            group: Media Server
            widget:
              custom:
                key: ${PLEX_TOKEN_PAL}
          certManager:
            enabled: true
            certificateIssuer: general-le-prod
    gatus:
      endpoints:
        - name: plex
          group: media
          url: "http://plex.plex.svc.cluster.local:32400"
          interval: 1m
          ui:
            hide-url: true
            hide-hostname: true
          conditions:
            - "[CONNECTED] == true"
          alerts:
            - type: discord
              description: "healthcheck failed"
              send-on-resolved: true
    configmap:
      gatus:
        enabled: true
        labels:
          gatus.io/enabled: "true"
        data:
          config.yaml: |
            {{- $.Values.gatus | toYaml | nindent 2 }}
    persistence:
      config:
        volsync:
          - name: config
            type: restic
            credentials: tn-restic
            dest:
              cacheCapacity: 100Gi
              enabled: true
            src:
              enabled: true
              cacheCapacity: 100Gi
      transcode:
        enabled: true
        type: emptyDir
        mountPath: /transcode
        medium: "" # Memory
      media:
        enabled: true
        type: nfs
        server: ${SCALE_IP}
        path: ${MEDIA_NFS}
        mountPath: ${MEDIA_LOCAL}
