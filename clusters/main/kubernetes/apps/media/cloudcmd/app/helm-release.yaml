---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cloudcmd
  namespace: cloudcmd
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 15.8.2
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      stopAll: false
    image:
      repository: ghcr.io/coderaiser/cloudcmd
      pullPolicy: IfNotPresent
      tag: 19.0.8-alpine@sha256:564a54ba940dac809acd0ddc832175e5f521556a1f66e623f65cb0831755c6de
    credentials:
      cf-restic:
        type: s3
        url: "${CF_S3_RESTIC_URL}"
        bucket: "${CF_S3_RESTIC_BUCKET}-cloudcmd"
        accessKey: "${CF_S3_RESTIC_ID}"
        secretKey: "${CF_S3_RESTIC_KEY}"
        encrKey: "${CF_S3_RESTIC_KEY}"
    securityContext:
      container:
        readOnlyRootFilesystem: false
    service:
      main:
        ports:
          main:
            port: 8000
    ingress:
      main:
        enabled: true
        ingressClassName: "internal"
        hosts:
          - host: cloudcmd.${DOMAIN_2}
            paths:
              - path: /
                pathType: Prefix
        integrations:
          nginx:
            enabled: true
          certManager:
            enabled: true
            certificateIssuer: general-le-prod
    persistence:
      config:
        enabled: true
        mountPath: /root
        volsync:
          - name: config
            type: restic
            credentials: cf-restic
            dest:
              enabled: true
            src:
              enabled: true
      media:
        enabled: true
        type: nfs
        server: ${SCALE_IP}
        path: ${MEDIA_NFS}
        mountPath: ${MEDIA_LOCAL}
      downloads:
        enabled: true
        type: nfs
        server: ${SCALE_IP}
        path: ${DOWNLOADS_NFS}
        mountPath: "${DOWNLOADS_LOCAL}"
    cnpg:
      main:
        enabled: false
    configmap:
      gatus:
        enabled: true
        labels:
          gatus.io/enabled: "true"
        data:
          config.yaml: |
            endpoints:
              - name: {{ .Release.Namespace }}
                group: media
                url: '{{ printf "%s://%s-app-template.%s.svc.cluster.local:%v" "http" .Release.Name .Release.Namespace .Values.service.main.ports.main.port }}'
                interval: 1m
                ui:
                  hide-url: true
                  hide-hostname: true
                conditions:
                  - "[CONNECTED] == true"
                alerts:
                  - type: discord
                    description: "healthcheck failed"
                    send-on-resolved: true
