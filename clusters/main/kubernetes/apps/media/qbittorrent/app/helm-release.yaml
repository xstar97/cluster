---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: qbittorrent
spec:
  interval: 15m
  chart:
    spec:
      chart: qbittorrent
      version: 22.4.5
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  postRenderers:
    - kustomize:
        patches:
          - target:
              version: v1
              kind: Deployment
              name: qbittorrent
            patch: |
              - op: add
                path: /spec/template/spec/containers/1/resources/limits/truecharts.org~1tun
                value: 1
  values:
    global:
      stopAll: false
    credentials:
      cf-restic:
        type: s3
        url: "${CF_S3_RESTIC_URL}"
        bucket: "${CF_S3_RESTIC_BUCKET}-qbittorrent"
        accessKey: "${CF_S3_RESTIC_ID}"
        secretKey: "${CF_S3_RESTIC_KEY}"
        encrKey: "${CF_S3_RESTIC_KEY}"
    defaultCertificate: domain-0-wildcard
    service:
      main:
        type: ClusterIP
        ports:
          main:
            port: 10095
      torrent:
        enabled: true
        type: ClusterIP
        ports:
          torrent:
            enabled: true
            port: 58489
            protocol: tcp
          torrentudp:
            enabled: true
            port: "{{ .Values.service.torrent.ports.torrent.port }}"
            protocol: udp
      glue:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: "${GLUETUN_IP}"
        ports:
          control:
            enabled: true
            port: 7777
            protocol: http
          health:
            enabled: true
            port: 9999
            protocol: http
    ingress:
      main:
        enabled: true
        integrations:
          homepage:
            enabled: true
            group: "Media Downloads"
          traefik:
            enabled: true
            middlewares:
              - name: local
                namespace: traefik
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod
        hosts:
          - host: qbit.${DOMAIN_0}
            paths:
              - path: /
                pathType: Prefix
    addons:
      vpn:
        type: gluetun
        killSwitch: true
        excludedNetworks_IPv4:
          - "10.0.0.0/8"
        excludedNetworks_IPv6: []
        env:
          VPN_TYPE: "wireguard"
          VPN_SERVICE_PROVIDER: "custom"
          WIREGUARD_ENDPOINT_IP: "${WIREGUARD_ENDPOINT_IP}"
          WIREGUARD_ENDPOINT_PORT: "${WIREGUARD_ENDPOINT_PORT}"
          WIREGUARD_PUBLIC_KEY: "${WIREGUARD_PUBLIC_KEY}"
          WIREGUARD_PRIVATE_KEY: "${WIREGUARD_PRIVATE_KEY}"
          WIREGUARD_ADDRESSES: "${WIREGUARD_ADDRESSES}"
          FIREWALL_VPN_INPUT_PORTS: "{{ .Values.service.torrent.ports.torrent.port }}"
          VPN_PORT_FORWARDING_LISTENING_PORT: "{{ .Values.service.torrent.ports.torrent.port }}"
          HTTP_CONTROL_SERVER_ADDRESS: "0.0.0.0:{{ .Values.service.glue.ports.control.port }}"
          HEALTH_SERVER_ADDRESS: "0.0.0.0:{{ .Values.service.glue.ports.health.port }}"

    configmap:
      gluetun-auth-config:
        enabled: true
        data:
          config.toml: >-
            [[roles]]
            
            name = "qbittorrent"

            routes = ["GET /v1/vpn/status","GET /v1/publicip/ip"]

            auth = "apikey"
            
            apikey = "${GLUETUN_API_KEY}"

    persistence:
      config:
        volsync:
          - name: config
            type: restic
            credentials: cf-restic
            dest:
              enabled: true
              cacheCapacity: 10Gi
              cleanupTempPVC: true
              cleanupCachePVC: true
            src:
              enabled: true
              cacheCapacity: 10Gi
              cleanupTempPVC: true
              cleanupCachePVC: true
      downloads:
        enabled: true
        type: nfs
        server: ${SCALE_IP}
        path: ${DOWNLOADS_NFS}
        mountPath: "${DOWNLOADS_LOCAL}"
      gluetun-auth-config:
        enabled: true
        type: configmap
        mountPath: /gluetun/auth/config.toml
        objectName: gluetun-auth-config
        readOnly: true
        subPath: config.toml
        targetSelectAll: true
