apiVersion: v1
kind: ConfigMap
metadata:
  name: ${CHART}-gatus-epv2
  labels:
    gatus.io/enabled: "true"
data:
  config.yaml: |
    {{- $svcName := "${SVC}" -}}

    {{- $svc := index .Values.service $svcName -}}
    {{- $port := index $svc.ports $svcName -}}

    {{- /* Protocol selection logic */ -}}
    {{- $protocol := "http" -}}                 # default
    {{- if not (empty $port.protocol) -}}
      {{- $protocol = $port.protocol -}}        # use port.protocol if set
    {{- end -}}
    {{- if not (empty "${PROT}") -}}
      {{- $protocol = "${PROT}" -}}             # override with PROT if set
    {{- end -}}

    {{- $fullname := include "tc.v1.common.lib.chart.names.fullname" $ -}}
    {{- $objectName := $svcName -}}

    {{- $expandName := include "tc.v1.common.lib.util.expandName" (dict "rootCtx" $ "objectData" $svc "name" $svcName "caller" "Service" "key" "service") -}}
    {{- if eq $expandName "true" -}}
      {{- $objectName = $fullname -}}
    {{- end -}}

    {{- if and (eq $expandName "true") (not $svc.primary) -}}
      {{- $objectName = printf "%s-%s" $fullname $svcName -}}
    {{- end -}}

    {{- $internalUrl := printf "%s://%s.%s.svc.cluster.local:%v" $protocol $objectName .Release.Namespace $port.port -}}

    endpoints:
      - name: "${NAME}"
        group: "${GROUP}"
        url: {{ $internalUrl }}
        interval: 1m
        ui:
          hide-url: true
          hide-hostname: true
        conditions:
          - "[CONNECTED] == true"
        alerts:
          - type: discord
            description: "healthcheck failed"
            send-on-resolved: true
